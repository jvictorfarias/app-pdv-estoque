/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View;

import Controller.ControllerCliente;
import Controller.ControllerProduto;
import Controller.ControllerProdutosVendasProdutos;
import Controller.ControllerVendas;
import Controller.ControllerVendasCliente;
import Controller.ControllerVendasProdutos;
import Model.ModelProduto;
import Model.ModelProdutosVendasProdutos;
import Model.ModelVendas;
import Model.ModelVendasCliente;
import Model.ModelVendasProdutos;
import Util.ConvertDate;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import Model.ModelCliente;

/**
 *
 * @author v1ct0r_f4r145
 */
public class ViewVendas extends javax.swing.JFrame {

    /**
     * Creates new form ViewVendas
     */
    ControllerCliente controllerCliente = new ControllerCliente();
    ControllerProduto controllerProduto = new ControllerProduto();
    ControllerVendas controllerVendas = new ControllerVendas();
    ControllerVendasCliente controllerVendasCliente = new ControllerVendasCliente();
    ControllerVendasProdutos controllerVendasProdutos = new ControllerVendasProdutos();
    ControllerProdutosVendasProdutos controllerProdutosVendasProdutos = new ControllerProdutosVendasProdutos();
    ModelVendasProdutos modelVendasProdutos = new ModelVendasProdutos();
    ModelCliente modelCliente = new ModelCliente();
    ModelVendas modelVendas = new ModelVendas();
    ModelProduto modelProduto = new ModelProduto();
    ModelProdutosVendasProdutos modelProdutosVendasProdutos = new ModelProdutosVendasProdutos();
    ConvertDate convertDate = new ConvertDate();
    ArrayList<ModelCliente> listaModelClientes = new ArrayList<>();
    ArrayList<ModelVendasProdutos> listaModelVendasProdutos = new ArrayList<>();
    ArrayList<ModelProduto> listaModelProdutos = new ArrayList<>();
    ArrayList<ModelVendasCliente> listaModelVendasClientes = new ArrayList<>();
    ArrayList<ModelProdutosVendasProdutos> listaModelProdutosVendasProdutos = new ArrayList<>();
    String globalSave = "save";

    public ViewVendas() {
        initComponents();
        listarClientes();
        listarProdutos();
        setLocationRelativeTo(null);
        carregarVendas();
        preencheCodigoCliente();
        preencheCodigoProduto();
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jtfCodCliente = new javax.swing.JTextField();
        jcNomeCliente = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jtfNumVenda = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jtfCodProduto = new javax.swing.JTextField();
        jcNomeProduto = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        jtfQtd = new javax.swing.JTextField();
        jbAdicionar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtVendas = new javax.swing.JTable();
        jLabel7 = new javax.swing.JLabel();
        jtfDesconto = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jtfValorTotal = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jbCancelar = new javax.swing.JButton();
        jbNovo = new javax.swing.JButton();
        jbSalvar = new javax.swing.JButton();
        jbRemoverProdutos = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jtfPesquisa = new javax.swing.JTextField();
        jbPesquisar = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jtGerenciaVendas = new javax.swing.JTable();
        jbExcluirGerencia = new javax.swing.JButton();
        jbAlterarGerencia = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setText("Código Cliente:");

        jtfCodCliente.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtfCodClienteFocusLost(evt);
            }
        });
        jtfCodCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfCodClienteActionPerformed(evt);
            }
        });

        jcNomeCliente.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jcNomeCliente.setToolTipText("");
        jcNomeCliente.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                jcNomeClientePopupMenuWillBecomeInvisible(evt);
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
            }
        });
        jcNomeCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcNomeClienteActionPerformed(evt);
            }
        });

        jLabel2.setText("Nome do Cliente:");

        jLabel3.setText("Número da venda:");

        jtfNumVenda.setEditable(false);
        jtfNumVenda.setDisabledTextColor(new java.awt.Color(255, 51, 51));
        jtfNumVenda.setEnabled(false);
        jtfNumVenda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfNumVendaActionPerformed(evt);
            }
        });

        jLabel4.setText("Cód. Produto:");

        jtfCodProduto.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtfCodProdutoFocusLost(evt);
            }
        });
        jtfCodProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfCodProdutoActionPerformed(evt);
            }
        });

        jcNomeProduto.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jcNomeProduto.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                jcNomeProdutoPopupMenuWillBecomeInvisible(evt);
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
            }
        });

        jLabel5.setText("Quantidade:");

        jtfQtd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfQtdActionPerformed(evt);
            }
        });

        jbAdicionar.setText("Adicionar");
        jbAdicionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbAdicionarActionPerformed(evt);
            }
        });

        jtVendas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Código", "Nome", "Quantidade", "Valor Uni.", "Valor Total"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class, java.lang.Double.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jtVendas);
        if (jtVendas.getColumnModel().getColumnCount() > 0) {
            jtVendas.getColumnModel().getColumn(1).setPreferredWidth(100);
        }

        jLabel7.setText("Desconto:");

        jtfDesconto.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtfDescontoFocusLost(evt);
            }
        });
        jtfDesconto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfDescontoActionPerformed(evt);
            }
        });

        jLabel6.setText("Valor Total:");

        jtfValorTotal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfValorTotalActionPerformed(evt);
            }
        });

        jLabel8.setText("Nome do Produto:");

        jbCancelar.setText("Cancelar");
        jbCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbCancelarActionPerformed(evt);
            }
        });

        jbNovo.setText("Novo");
        jbNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbNovoActionPerformed(evt);
            }
        });

        jbSalvar.setText("Salvar");
        jbSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbSalvarActionPerformed(evt);
            }
        });

        jbRemoverProdutos.setText("Remover");
        jbRemoverProdutos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbRemoverProdutosActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jtfCodCliente)
                                    .addComponent(jLabel4)
                                    .addComponent(jtfCodProduto))
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jcNomeProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(jcNomeCliente, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 364, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(jLabel2)))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addComponent(jLabel3)
                                                .addGap(0, 104, Short.MAX_VALUE))
                                            .addComponent(jtfNumVenda)))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(10, 10, 10)
                                        .addComponent(jLabel8)
                                        .addGap(206, 206, 206)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addComponent(jtfQtd)
                                                .addGap(18, 18, 18)
                                                .addComponent(jbAdicionar))
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addComponent(jLabel5)
                                                .addGap(0, 0, Short.MAX_VALUE))))))
                            .addComponent(jScrollPane1))
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jtfDesconto, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addComponent(jtfValorTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(9, 9, 9))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jbCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jbRemoverProdutos, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jbNovo, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jbSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1))
                .addGap(10, 10, 10)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtfCodCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jcNomeCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtfNumVenda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel8)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtfCodProduto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jcNomeProduto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtfQtd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbAdicionar))
                .addGap(24, 24, 24)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel6)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtfDesconto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtfValorTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(37, 37, 37)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbCancelar)
                    .addComponent(jbNovo)
                    .addComponent(jbRemoverProdutos)
                    .addComponent(jbSalvar))
                .addGap(141, 141, 141))
        );

        jTabbedPane1.addTab("Cadastro", jPanel1);

        jLabel9.setText("Pesquisa:");

        jbPesquisar.setText("Pesquisar");

        jtGerenciaVendas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Código", "Nome Cliente", "Data"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(jtGerenciaVendas);
        if (jtGerenciaVendas.getColumnModel().getColumnCount() > 0) {
            jtGerenciaVendas.getColumnModel().getColumn(1).setPreferredWidth(200);
        }

        jbExcluirGerencia.setText("Excluir");
        jbExcluirGerencia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbExcluirGerenciaActionPerformed(evt);
            }
        });

        jbAlterarGerencia.setText("Alterar");
        jbAlterarGerencia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbAlterarGerenciaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(jtfPesquisa)
                        .addGap(18, 18, 18)
                        .addComponent(jbPesquisar))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 688, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel9)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jbExcluirGerencia)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jbAlterarGerencia)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtfPesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbPesquisar))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 296, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbExcluirGerencia)
                    .addComponent(jbAlterarGerencia))
                .addContainerGap(34, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Gerenciamento de Vendas", jPanel2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 482, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbAlterarGerenciaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbAlterarGerenciaActionPerformed
        // TODO add your handling code here:
        globalSave = "alter";
        int linha = jtGerenciaVendas.getSelectedRow();
        int codigoVenda = Integer.parseInt(jtGerenciaVendas.getValueAt(linha, 0).toString());
        listaModelProdutosVendasProdutos = controllerProdutosVendasProdutos.getListaProdutosVendasProdutosController(codigoVenda);
        DefaultTableModel alterTable = (DefaultTableModel) jtVendas.getModel();
        alterTable.setNumRows(0);
        for (int i = 0; i < listaModelProdutosVendasProdutos.size(); i++) {
            this.jtfNumVenda.setText(String.valueOf(listaModelProdutosVendasProdutos.get(i).getModelVendasProdutos().getId_venda_produto()));
            alterTable.addRow(new Object[]{
                listaModelProdutosVendasProdutos.get(i).getModelProduto().getIdProduto(),
                listaModelProdutosVendasProdutos.get(i).getModelProduto().getNomeProduto(),
                listaModelProdutosVendasProdutos.get(i).getModelVendasProdutos().getVenda_produto_qtd(),
                listaModelProdutosVendasProdutos.get(i).getModelVendasProdutos().getVenda_produto_valor(),
                (listaModelProdutosVendasProdutos.get(i).getModelVendasProdutos().getVenda_produto_valor()
                * listaModelProdutosVendasProdutos.get(i).getModelVendasProdutos().getVenda_produto_qtd())
            });
        }
        somaProdutosVenda();
        jTabbedPane1.setSelectedIndex(0);
    }//GEN-LAST:event_jbAlterarGerenciaActionPerformed

    // VIEW usada aqui.
    private void jbExcluirGerenciaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbExcluirGerenciaActionPerformed
        // TODO add your handling code here:
        int linha = jtGerenciaVendas.getSelectedRow();
        int codigoVenda = (int) jtGerenciaVendas.getValueAt(linha, 0);
        listaModelProdutos = new ArrayList<>();
        listaModelProdutosVendasProdutos = controllerProdutosVendasProdutos.getListaProdutosVendasProdutosController(codigoVenda);
        for (int i = 0; i < listaModelProdutosVendasProdutos.size(); i++) {
            modelProduto = new ModelProduto();
            modelProduto.setIdProduto(listaModelProdutosVendasProdutos.get(i).getModelProduto().getIdProduto());
            modelProduto.setEstoqueProduto(listaModelProdutosVendasProdutos.get(i).getModelProduto().getEstoqueProduto()
                    + listaModelProdutosVendasProdutos.get(i).getModelVendasProdutos().getVenda_produto_qtd());
            listaModelProdutos.add(modelProduto);

        }
        if (controllerProduto.alterarEstoqueProduto(listaModelProdutos)) {
            //Excluir a FK da venda em produtos/vendas;
            controllerVendasProdutos.excluirVendasProdutosController(codigoVenda);
            if (controllerVendas.excluirVendasController(codigoVenda)) {
                JOptionPane.showMessageDialog(this, "Venda excluída", "Aviso", JOptionPane.WARNING_MESSAGE);
                this.carregarVendas();
            } else {
                JOptionPane.showMessageDialog(this, "Erro ao excluir venda", "ERROR", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(this, "Erro ao excluir venda", "ERROR", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jbExcluirGerenciaActionPerformed

    private void jbRemoverProdutosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbRemoverProdutosActionPerformed
        // TODO add your handling code here:
        int linha = jtVendas.getSelectedRow();
        DefaultTableModel tabelaAlter = (DefaultTableModel) jtVendas.getModel();
        tabelaAlter.removeRow(linha);
        somaProdutosVenda();
    }//GEN-LAST:event_jbRemoverProdutosActionPerformed

    private void jbSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbSalvarActionPerformed
        // TODO add your handling code here:
        int codigoVenda = 0;
        listaModelVendasProdutos = new ArrayList<>();
        double desconto = 0;

        if (this.jtfDesconto.getText().equals("")) {
            desconto = 0;
        } else {
            desconto = (Double.parseDouble(jtfDesconto.getText()));
        }
        if (!jtfNumVenda.getText().equals("")) {
            modelVendas.setId_venda(Integer.parseInt(jtfNumVenda.getText()));
        }
        modelVendas.setFk_cliente(Integer.parseInt(this.jtfCodCliente.getText()));

        try {
            modelVendas.setData_venda(convertDate.converterDataParaDateUS(new java.util.Date(System.currentTimeMillis())));
        } catch (Exception ex) {
            Logger.getLogger(ViewVendas.class.getName()).log(Level.SEVERE, null, ex);
        }

        modelVendas.setValor_liquido_venda(Double.parseDouble(jtfValorTotal.getText()));
        modelVendas.setValor_bruto_venda(Double.parseDouble(jtfValorTotal.getText()) + desconto);
        modelVendas.setDesconto_venda(desconto);

        if (globalSave.equals("save")) {
            // Salva novos pedidos
            codigoVenda = controllerVendas.salvarVendasController(modelVendas);

            if (codigoVenda != 0) {
                JOptionPane.showMessageDialog(this, "Venda realizada!", "Aviso", JOptionPane.WARNING_MESSAGE);
                carregarVendas();
            } else {
                JOptionPane.showMessageDialog(this, "Venda não pôde ser completada!", "ERROR", JOptionPane.ERROR_MESSAGE);
            }
            int count = jtVendas.getRowCount();
            for (int i = 0; i < count; i++) {
                int codigoProduto = (int) this.jtVendas.getValueAt(i, 0);
                modelProduto = new ModelProduto();
                modelVendasProdutos = new ModelVendasProdutos();
                modelVendasProdutos.setFk_produto(codigoProduto);
                modelVendasProdutos.setFk_venda(codigoVenda);
                modelVendasProdutos.setVenda_produto_valor(Double.parseDouble(jtVendas.getValueAt(i, 3).toString()));
                modelVendasProdutos.setVenda_produto_qtd(Integer.parseInt(jtVendas.getValueAt(i, 2).toString()));
                // Produto
                modelProduto.setIdProduto(Integer.parseInt(jtVendas.getValueAt(i, 0).toString()));
                modelProduto.setEstoqueProduto(controllerProduto.readProdutoController(codigoProduto).getEstoqueProduto()
                        - Integer.parseInt(jtVendas.getValueAt(i, 2).toString()));
                listaModelVendasProdutos.add(modelVendasProdutos);
                listaModelProdutos.add(modelProduto);

            }
            try{
            if (controllerVendasProdutos.salvarVendasProdutosController(listaModelVendasProdutos)) {
                try {
                    controllerProduto.alterarEstoqueProduto(listaModelProdutos);
                    JOptionPane.showMessageDialog(this, "Produtos da venda salvos!", "Aviso", JOptionPane.WARNING_MESSAGE);
                    limpaInterface();
                    carregarVendas();
                } catch (Exception e) {
                    e.printStackTrace();
                }

            } else {
                JOptionPane.showMessageDialog(this, "Falha ao salvar os produtos da venda", "ERROR", JOptionPane.ERROR_MESSAGE);
            }
            }catch(Exception e){
                e.printStackTrace();
                 JOptionPane.showMessageDialog(this, "Falha ao salvar os produtos da venda", "ERROR", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            // Alterar ou Excluir Produtos da venda
            int linha = jtGerenciaVendas.getSelectedRow();
            codigoVenda = Integer.parseInt(jtGerenciaVendas.getValueAt(linha, 0).toString());
            listaModelProdutos = new ArrayList<>();
            listaModelProdutosVendasProdutos = controllerProdutosVendasProdutos.getListaProdutosVendasProdutosController(codigoVenda);
            for (int i = 0; i < listaModelProdutosVendasProdutos.size(); i++) {
                modelProduto = new ModelProduto();
                modelProduto.setIdProduto(listaModelProdutosVendasProdutos.get(i).getModelProduto().getIdProduto());
                modelProduto.setEstoqueProduto(listaModelProdutosVendasProdutos.get(i).getModelProduto().getEstoqueProduto()
                        + listaModelProdutosVendasProdutos.get(i).getModelVendasProdutos().getVenda_produto_qtd());
                listaModelProdutos.add(modelProduto);

            }
            if (controllerProduto.alterarEstoqueProduto(listaModelProdutos)) {
                //Excluir a FK da venda em produtos/vendas;
                if (controllerVendasProdutos.excluirVendasProdutosController(codigoVenda)) {
                    JOptionPane.showMessageDialog(this, "Venda excluída", "Aviso", JOptionPane.WARNING_MESSAGE);
                    this.carregarVendas();
                } else {
                    JOptionPane.showMessageDialog(this, "Erro ao excluir venda", "ERROR", JOptionPane.ERROR_MESSAGE);
                }
            } else {
                JOptionPane.showMessageDialog(this, "Erro ao excluir venda", "ERROR", JOptionPane.ERROR_MESSAGE);
            }

            if (controllerVendas.atualizarVendasController(modelVendas)) {
                JOptionPane.showMessageDialog(this, "Venda Alterada com sucesso", "Aviso", JOptionPane.WARNING_MESSAGE);
            } else {
                JOptionPane.showMessageDialog(this, "Falha ao alterar venda", "ERROR", JOptionPane.ERROR_MESSAGE);
            }
            // Adiciona produtos na lista para salvar
            int count = jtVendas.getRowCount();
            for (int i = 0; i < count; i++) {
                int codigoProduto = Integer.parseInt(this.jtVendas.getValueAt(i, 0).toString());
                modelProduto = new ModelProduto();
                modelVendasProdutos = new ModelVendasProdutos();
                modelVendasProdutos.setFk_produto(codigoProduto);
                modelVendasProdutos.setFk_venda(codigoVenda);
                modelVendasProdutos.setVenda_produto_valor(Double.parseDouble(jtVendas.getValueAt(i, 3).toString()));
                modelVendasProdutos.setVenda_produto_qtd(Integer.parseInt(jtVendas.getValueAt(i, 2).toString()));
                // Produto
                modelProduto.setIdProduto(Integer.parseInt(jtVendas.getValueAt(i, 0).toString()));
                modelProduto.setEstoqueProduto(controllerProduto.readProdutoController(codigoProduto).getEstoqueProduto()
                        - Integer.parseInt(jtVendas.getValueAt(i, 2).toString()));
                listaModelVendasProdutos.add(modelVendasProdutos);
                listaModelProdutos.add(modelProduto);

            }
            // Salva os produtos da venda
            if (controllerVendasProdutos.salvarVendasProdutosController(listaModelVendasProdutos)) {
                JOptionPane.showMessageDialog(this, "Produtos da venda salvos", "Aviso", JOptionPane.WARNING_MESSAGE);
                limpaInterface();
                carregarVendas();

            } else {
                JOptionPane.showMessageDialog(this, "Falha ao alterar produtos da vanda", "ERROR", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_jbSalvarActionPerformed

    private void jbNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbNovoActionPerformed
        // TODO add your handling code here:
        globalSave = "save";
        limpaInterface();
    }//GEN-LAST:event_jbNovoActionPerformed

    private void jbCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbCancelarActionPerformed
        // TODO add your handling code here:
        int linha = jtGerenciaVendas.getSelectedRow();
        int codigo = (int) jtGerenciaVendas.getValueAt(linha, 0);
        if (controllerVendas.excluirVendasController(codigo)) {
            JOptionPane.showMessageDialog(this, "Venda Excluída!", "Aviso", JOptionPane.WARNING_MESSAGE);
            this.carregarVendas();
        } else {
            JOptionPane.showMessageDialog(this, "Erro ao excluir venda", "ERROR", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jbCancelarActionPerformed

    private void jtfValorTotalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfValorTotalActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtfValorTotalActionPerformed

    private void jtfDescontoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfDescontoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtfDescontoActionPerformed

    private void jtfDescontoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtfDescontoFocusLost
        // TODO add your handling code here:
        somaProdutosVenda();
    }//GEN-LAST:event_jtfDescontoFocusLost

    private void jbAdicionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbAdicionarActionPerformed
        // TODO add your handling code here:
        if (jtfQtd.getText().equals("")) {
            JOptionPane.showConfirmDialog(this, "Adicione a quantidade!", "Aviso", JOptionPane.WARNING_MESSAGE);
        } else {
            controllerProduto.readProdutoController(Integer.parseInt(jtfCodProduto.getText()));
            DefaultTableModel tabelaVendaProduto = (DefaultTableModel) jtVendas.getModel();
            int count = 0;
            int qtd = 0;
            qtd = Integer.parseInt(jtfQtd.getText());
            for (int i = 0; i < count; i++) {
                tabelaVendaProduto.setNumRows(0);
            }

            tabelaVendaProduto.addRow(new Object[]{
                modelProduto.getIdProduto(),
                modelProduto.getNomeProduto(),
                jtfQtd.getText(),
                modelProduto.getValorProduto(),
                qtd * modelProduto.getValorProduto()
            });
            somaProdutosVenda();
        }
    }//GEN-LAST:event_jbAdicionarActionPerformed

    private void jcNomeProdutoPopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_jcNomeProdutoPopupMenuWillBecomeInvisible
        // TODO add your handling code here:
        if (jcNomeProduto.isPopupVisible()) {
            modelProduto = controllerProduto.readProdutoController(jcNomeProduto.getSelectedItem().toString());
            jtfCodProduto.setText(String.valueOf(modelProduto.getIdProduto()));

        }
    }//GEN-LAST:event_jcNomeProdutoPopupMenuWillBecomeInvisible

    private void jtfCodProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfCodProdutoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtfCodProdutoActionPerformed

    private void jtfCodProdutoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtfCodProdutoFocusLost
        // TODO add your handling code here:
        modelProduto = controllerProduto.readProdutoController(Integer.parseInt(this.jtfCodProduto.getText()));
        jcNomeProduto.setSelectedItem(modelProduto.getNomeProduto());
    }//GEN-LAST:event_jtfCodProdutoFocusLost

    private void jtfNumVendaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfNumVendaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtfNumVendaActionPerformed

    private void jcNomeClientePopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_jcNomeClientePopupMenuWillBecomeInvisible
        // TODO add your handling code here:
        if (jcNomeCliente.isPopupVisible()) {
            modelCliente = controllerCliente.getClienteController(jcNomeCliente.getSelectedItem().toString());
            jtfCodCliente.setText(String.valueOf(modelCliente.getId_cliente()));
        }
    }//GEN-LAST:event_jcNomeClientePopupMenuWillBecomeInvisible

    private void jtfCodClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfCodClienteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtfCodClienteActionPerformed

    private void jtfCodClienteFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtfCodClienteFocusLost
        // TODO add your handling code here:
        modelCliente = controllerCliente.getClienteController(Integer.parseInt(this.jtfCodCliente.getText()));
        jcNomeCliente.setSelectedItem(modelCliente.getNome_cliente());
    }//GEN-LAST:event_jtfCodClienteFocusLost

    private void jtfQtdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfQtdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtfQtdActionPerformed

    private void jcNomeClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcNomeClienteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jcNomeClienteActionPerformed

    private void limpaInterface() {
        this.jtfQtd.setText("");
        this.jtfDesconto.setText("");
        this.jtfValorTotal.setText("");
        DefaultTableModel tabelaVendasCliente = (DefaultTableModel) jtGerenciaVendas.getModel();
        tabelaVendasCliente.setNumRows(0);
    }

    private void listarClientes() {
        listaModelClientes = controllerCliente.getListaClienteController();
        this.jcNomeCliente.removeAllItems();
        for (int i = 0; i < listaModelClientes.size(); i++) {
            this.jcNomeCliente.addItem(listaModelClientes.get(i).getNome_cliente());

        }

    }

    private void listarProdutos() {
        listaModelProdutos = controllerProduto.readEstoqueProdutoController();
        this.jcNomeProduto.removeAllItems();
        for (int i = 0; i < listaModelProdutos.size(); i++) {
            this.jcNomeProduto.addItem(listaModelProdutos.get(i).getNomeProduto());
        }
    }

    private void aplicaDesconto() {
        try {
            double res = Double.parseDouble(jtfValorTotal.getText()) - Double.parseDouble(jtfDesconto.getText());
            jtfValorTotal.setText(String.format("%.2f", res));
        } catch (NumberFormatException e) {
            e.printStackTrace();
        }
    }

    private void somaProdutosVenda() {
        double soma, valor;
        soma = 0;
        int count = jtVendas.getRowCount();
        for (int i = 0; i < count; i++) {
            valor = (double) jtVendas.getValueAt(i, 4);
            soma += valor;
        }

        jtfValorTotal.setText(String.valueOf(soma));
        if (!(jtfDesconto.getText().equals(""))) {
            aplicaDesconto();
        }
    }

    private void preencheCodigoProduto() {
        modelProduto = controllerProduto.readProdutoController(jcNomeProduto.getSelectedItem().toString());
        jtfCodProduto.setText(String.valueOf(modelProduto.getIdProduto()));
    }

    private void preencheCodigoCliente() {
        modelCliente = controllerCliente.getClienteController(jcNomeCliente.getSelectedItem().toString());
        jtfCodCliente.setText(String.valueOf(modelCliente.getId_cliente()));
    }

    private void carregarVendas() {
        try {
            DefaultTableModel tabelaVendasCliente = (DefaultTableModel) jtGerenciaVendas.getModel();
            listaModelVendasClientes = controllerVendasCliente.getListaVendasClienteController();
            int count = listaModelVendasClientes.size();
            tabelaVendasCliente.setNumRows(0);
            for (int i = 0; i < count; i++) {
                tabelaVendasCliente.addRow(new Object[]{
                    listaModelVendasClientes.get(i).getModelVendas().getId_venda(),
                    listaModelVendasClientes.get(i).getModelCliente().getNome_cliente(),
                    listaModelVendasClientes.get(i).getModelVendas().getData_venda()
                });
            }
        } catch (Exception e) {
            e.printStackTrace();
        }

    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ViewVendas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ViewVendas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ViewVendas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ViewVendas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ViewVendas().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JButton jbAdicionar;
    private javax.swing.JButton jbAlterarGerencia;
    private javax.swing.JButton jbCancelar;
    private javax.swing.JButton jbExcluirGerencia;
    private javax.swing.JButton jbNovo;
    private javax.swing.JButton jbPesquisar;
    private javax.swing.JButton jbRemoverProdutos;
    private javax.swing.JButton jbSalvar;
    private javax.swing.JComboBox<String> jcNomeCliente;
    private javax.swing.JComboBox<String> jcNomeProduto;
    private javax.swing.JTable jtGerenciaVendas;
    private javax.swing.JTable jtVendas;
    private javax.swing.JTextField jtfCodCliente;
    private javax.swing.JTextField jtfCodProduto;
    private javax.swing.JTextField jtfDesconto;
    private javax.swing.JTextField jtfNumVenda;
    private javax.swing.JTextField jtfPesquisa;
    private javax.swing.JTextField jtfQtd;
    private javax.swing.JTextField jtfValorTotal;
    // End of variables declaration//GEN-END:variables
}
